global_costmap:
  plugins:
    - { name: static_layer,                  type: "costmap_2d::StaticLayer"}
    - { name: obstacle_layer,                type: "costmap_2d::ObstacleLayer"}
    - { name: inflation_layer,               type: "costmap_2d::InflationLayer"}
  static_layer:
    unknown_cost_value: -1
    lethal_cost_threshold: 100
    map_topic: map
    first_map_only: false
    subscribe_to_updates: false
    track_unknown_space: true
    use_maximum: false
    trinary_costmap: true
  inflation_layer:
    inflation_radius: 0.3
    cost_scaling_factor: 0.5
    inflate_unknown: true
  obstacle_layer:
    observation_sources: laser_scan_sensor
    laser_scan_sensor:
      topic: scan
      sensor_frame: laser
      observation_persistence: 0.0
      expected_update_rate: 0.0
      data_type: LaserScan
      clearing: true
      marking: true
      max_obstacle_height: 1.0
      min_obstacle_height: 0.0
      obstacle_range: 2.5
      raytrace_range: 3.0
      inf_is_valid: false
  footprint: [ [ -0.325, -0.325 ], [ -0.325, 0.325 ], [ 0.325, 0.325 ], [ 0.325, -0.325 ] ]
  update_frequency: 5
  publish_frequency: 1
  transform_tolerance: 1.5
  rolling_window: true
  width: 20
  height: 20
  origin_x: 0.0
  origin_y: 0.0
  resolution: 0.05


local_costmap:
  plugins:
    - { name: obstacle_layer,        type: "costmap_2d::ObstacleLayer" }
    # - { name: obstacle_layer,         type: "costmap_2d::VoxelLayer"}
    - { name: inflation_layer,        type: "costmap_2d::InflationLayer"}
  obstacle_layer:
    enabled: true
    footprint_clearing_enabled: true
    max_obstacle_height: 1.0
    z_voxels: 16
    origin_z: 0.0
    z_resolution: 0.2
    unknown_thteshold: 16
    mark_threshold: 0
    combination_method: 0
    publish_voxel_map: true
    observation_sources: pointcloud2
    pointcloud2:
      topic: /camera/depth/color/points
      sensor_frame: camera_link
      observation_persistence: 0.0
      expected_update_rate: 0.0
      data_type: PointCloud2
      min_obstacle_height: 0.0
      inf_is_valid: true
      clearing: true
      marking: true
      obstacle_max_range: 3.0
      obstacle_min_range: 0.0
      raytrace_max_range: 3.0
      raytrace_min_range: 0.0
      
      
      
      
  
    
    
  # obstacle_layer:
  #   observation_sources: laser_scan_sensor
  #   laser_scan_sensor:
  #     topic: scan
  #     sensor_frame: laser
  #     observation_persistence: 0.0
  #     expected_update_rate: 0.0
  #     data_type: LaserScan
  #     clearing: true
  #     marking: true
  #     max_obstacle_height: 1.0
  #     min_obstacle_height: 0.0
  #     obstacle_range: 2.5
  #     raytrace_range: 3.0
  #     inf_is_valid: false
  #   track_unknown_space: true
  #   footprint_clearing_enabled: true
  #   combination_method: 1

  inflation_layer:
    inflation_radius: 2.0
    cost_scaling_factor: 0.9
  footprint: [ [ -0.325, -0.325 ], [ -0.325, 0.325 ], [ 0.325, 0.325 ], [ 0.325, -0.325 ] ]
  update_frequency: 5
  publish_frequency: 5
  transform_tolerance: 1.5
  rolling_window: true
  width: 10
  height: 10
  origin_x: 0.0
  origin_y: 0.0
  resolution: 0.05

BaseGlobalPlanner:
  use_grid_path: false             # If true, create a path that follows the grid boundaries. Otherwise, use a gradient descent method.
  use_quadratic: true              # If true, use the quadratic approximation of the potential. Otherwise, use a simpler calculation.
  use_dijkstra: true               # If true, use dijkstra's algorithm. Otherwise, A*.
  allow_unknown: true              # Specifies whether or not to allow the planner to create plans that traverse unknown space. 
  default_tolerance: 0.2           # A tolerance on the goal point for the planner. The planner will attempt to create a plan that is as close to the specified goal as possible but no further than default_tolerance away.
  old_navfn_behavior: false        # If for some reason, you want global_planner to exactly mirror the behavior of navfn, set this to true 
  lethal_cost: 253
  neutral_cost: 66  # 50
  cost_factor: 0.55 # 3
  publish_potential: true
  orientation_mode: 0
  orientation_window_size: 2       # What window to use to determine the orientation based on the position derivative specified by the orientation mode
  outline_map: true

DWAPlannerROS:
  # Robot configuration parameters  
  acc_lim_x: 0.1
  acc_lim_y: 0
  acc_lim_th: 0.05

  max_vel_x: 0.26
  min_vel_x: 0.0
  max_vel_y: 0
  min_vel_y: 0

  max_vel_trans: 0.26
  min_vel_trans: 0.05
  max_vel_theta: 0.26
  min_vel_theta: 0.1

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.2
  xy_goal_tolerance: 0.2
  latch_xy_goal_tolerance: false        # If goal tolerance is latched, if the robot ever reaches the goal xy location it will simply rotate in place, even if it ends up outside the goal tolerance while it is doing so.

 # Forward Simulation Parameters
  sim_time: 4.0                         # The amount of time to forward-simulate trajectories in seconds
  sim_granularity: 0.025                # The step size, in meters, to take between points on a given trajectory
  vx_samples: 20                        # The number of samples to use when exploring the x velocity space
  vy_samples: 0                         # The number of samples to use when exploring the y velocity space
  vth_samples: 40                       # The number of samples to use when exploring the theta velocity space
  controller_frequency: 5.0 
  
  # Trajectory Scoring Parameters
  path_distance_bias: 32.0
  goal_distance_bias: 24.0 #20.0 # 24.0
  occdist_scale: 0.01 #0.02 # 0.01
  forward_point_distance: 0.325
  stop_time_buffer: 0.2
  scaling_speed: 0.25
  max_scaling_factor: 0.2
  publish_cost_grid: false

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05

  # Global Plan Parameters
  prune_plan: false

# TebLocalPlannerROS:

#   odom_topic: odom
#   map_frame: /map

#   # Robot
#   acc_lim_x: 0.1
#   acc_lim_theta: 0.1
#   max_vel_x: 0.26
#   max_vel_x_backwards: 0.4
#   max_vel_theta: 0.26
#   max_vel_y: 0.0
#   acc_lim_y: 0.0
#   min_turning_radius: 0.0
  
#   footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
#     type: "polygon"
#     vertices: [ [ -0.325, -0.325 ], [ -0.325, 0.325 ], [ 0.325, 0.325 ], [ 0.325, -0.325 ] ]
#     is_footprint_dynamic: false
  
#   # GoalTolerance  
#   xy_goal_tolerance: 0.2
#   yaw_goal_tolerance: 0.2
#   free_goal_vel: False #Remove the goal velocity constraint such that the robot can arrive at the goal with maximum speed

#   # Trajectory
#   dt_ref: 0.3                             # Desired temporal resolution of the trajectory 
#   dt_hysteresis: 0.1                      # Hysteresis for automatic resizing depending on the current temporal resolution, usually approx. 10% of dt_ref is recommended
#   min_samples: 3                          # Minimum number of samples (should be always greater than 2)
#   global_plan_overwrite_orientation: true # Overwrite orientation of local subgoals provided by the global planner (since they often provide only a 2D path)
#   global_plan_viapoint_sep: -0.1          # If positive, via-points are extrected from the global plan (path-following mode). The value determines the resolution of the reference path (min. separation between each two consecutive via-points along the global plan, if negative: disabled). Refer to parameter weight_viapoint for adjusting the intensity. New in version 0.4
#   max_global_plan_lookahead_dist: 3.0     # Specify the maximum length (cumulative Euclidean distances) of the subset of the global plan taken into account for optimization.
#   force_reinit_new_goal_dist: 1.0         # Reinitialize the trajectory if a previous goal is updated with a separation of more than the specified value in meters
#   feasibility_check_no_poses: 5           # Specify up to which pose on the predicted plan the feasibility should be checked each sampling interval.
#   publish_feedback: false                 # Publish planner feedback containing the full trajectory and a list of active obstacles
#   shrink_horizon_backup: true             # llows the planner to shrink the horizon temporary (50%) in case of automatically detected issues
#   allow_init_with_backwards_motion: false
#   exact_arc_length: False
#   shrink_horizon_min_duration: 10.0

#   teb_autosize: True
  
#   # Obstacles
#   min_obstacle_dist: 0.4
#   include_costmap_obstacles: true
#   costmap_obstacles_behind_robot_dist: 1.0
#   obstacle_poses_affected: 30
#   inflation_dist: 0.6
#   include_dynamic_obstacles: true
#   legacy_obstacle_association: false
#   obstacle_association_force_inclusion_factor: 1.5
#   obstacle_association_cutoff_factor: 5

#   costmap_converter_plugin: ""
#   costmap_converter_spin_thread: true
#   costmap_converter_rate: 5

#   # Optimization
#   no_inner_iterations: 5
#   no_outer_iterations: 4
#   optimization_activate: true
#   optimization_verbose: false
#   penalty_epsilon: 0.1
#   weight_max_vel_x: 2
#   weight_max_vel_theta: 1
#   weight_acc_lim_x: 1
#   weight_acc_lim_theta: 1
#   weight_kinematics_nh: 1000
#   weight_kinematics_forward_drive: 1
#   weight_kinematics_turning_radius: 1
#   weight_optimaltime: 1
#   weight_obstacle: 50
#   weight_dynamic_obstacle: 10 # not in use yet
#   alternative_time_cost: false # not in use yet

#   # Homotopy Class Planner

#   enable_homotopy_class_planning: true
#   enable_multithreading: true
#   simple_exploration: false
#   max_number_classes: 4
#   roadmap_graph_no_samples: 15
#   roadmap_graph_area_width: 5
#   h_signature_prescaler: 0.5
#   h_signature_threshold: 0.1
#   obstacle_keypoint_offset: 0.1
#   obstacle_heading_threshold: 0.45
#   visualize_hc_graph: false
